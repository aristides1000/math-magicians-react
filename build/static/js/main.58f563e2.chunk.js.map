{"version":3,"sources":["logic/operate.js","components/Calculator.js","logic/calculate.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","results","object","button","setObject","obj","buttonName","total","next","match","includes","parseFloat","display","element","result","undefined","Calculator","props","setElement","className","id","type","onClick","defaultProps","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58f563e2.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport PropTypes from 'prop-types';\nimport calculate from '../logic/calculate';\n\nconst results = (object, button, setObject) => {\n  const recentObject = calculate(object, button);\n  setObject(recentObject);\n};\n\nconst display = (element) => {\n  const { next } = element;\n  const { operation } = element;\n  const { total } = element;\n  let result = null;\n\n  if (next === null && total !== null) {\n    if (operation !== null && operation !== undefined) {\n      result = `${total} ${operation}`;\n    } else {\n      result = total;\n    }\n  } else if (next !== null && total === null) {\n    result = next;\n  } else if (next !== null && total !== null) {\n    if (operation !== null && operation !== undefined) {\n      result = `${total} ${operation} ${next}`;\n    } else {\n      result = total;\n    }\n  } else if (total === null && next === null) {\n    result = 0;\n  }\n  return result;\n};\n\nexport default function Calculator(props) {\n  const {\n    total, next, operation, setElement,\n  } = props;\n  const element = { total, next, operation };\n\n  return (\n    <div className=\"container\" id=\"calculator\">\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col-4\">\n          <div className=\"row mt-5\">\n            <div className=\"col-12 text-end display-result px-1 border  border-1\">\n              <p className=\"py-3 mb-0 fs-4 \">{ display(element) }</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, 'AC', setElement); }}>\n              AC\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '+/-', setElement); }}>\n              +/-\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '%', setElement); }}>\n              %\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 mathematical-operator border  border-1\" onClick={() => { results(element, 'รท', setElement); }}>\n              รท\n            </button>\n          </div>\n          <div className=\"row\">\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '7', setElement); }}>\n              7\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '8', setElement); }}>\n              8\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '9', setElement); }}>\n              9\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 mathematical-operator border  border-1\" onClick={() => { results(element, 'x', setElement); }}>\n              x\n            </button>\n          </div>\n          <div className=\"row\">\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '4', setElement); }}>\n              4\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '5', setElement); }}>\n              5\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '6', setElement); }}>\n              6\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 mathematical-operator border  border-1\" onClick={() => { results(element, '-', setElement); }}>\n              -\n            </button>\n          </div>\n          <div className=\"row\">\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '1', setElement); }}>\n              1\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '2', setElement); }}>\n              2\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '3', setElement); }}>\n              3\n            </button>\n\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1 mathematical-operator\" onClick={() => { results(element, '+', setElement); }}>\n              +\n            </button>\n          </div>\n          <div className=\"row\">\n            <button type=\"button\" className=\"col-6 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '0', setElement); }}>\n              0\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1\" onClick={() => { results(element, '.', setElement); }}>\n              .\n            </button>\n            <button type=\"button\" className=\"col-3 d-flex justify-content-center align-items-center py-3 border  border-1 mathematical-operator\" onClick={() => { results(element, '=', setElement); }}>\n              =\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCalculator.defaultProps = {\n  next: null,\n  operation: null,\n  total: 0,\n};\n\nCalculator.propTypes = {\n  next: PropTypes.any,\n  operation: PropTypes.any,\n  total: PropTypes.any,\n  setElement: PropTypes.func.isRequired,\n};\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React, { useState } from 'react';\nimport Calculator from './components/Calculator';\n\nfunction App() {\n  const [element, setElement] = useState(0);\n\n  return (\n    <div>\n      <Calculator\n        next={element.next}\n        operation={element.operation}\n        total={element.total}\n        setElement={setElement}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}